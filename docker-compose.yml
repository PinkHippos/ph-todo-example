version: '3'
services:
  ######
  # Third Party Containers
  ######
  haproxy:
    image: dockercloud/haproxy:1.6.6
    ports:
      - '80:80'
    links:
      - api
      # - auth
      - frontend
    # Linked with docker daemon so it can reload
    # when new containers are added, destoryed, or restarted
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    image: rabbitmq:management
    ports:
      - '15672:15672'

  # redis:
  #   image: redis:3.0

  rethinkdb:
    image: rethinkdb
    ports:
      - '8080:8080'

  ######
  # Frontend web server
  ######
  frontend:
    build:
      context: './ph-todo-frontend'
      dockerfile: 'Dockerfile'
    command: sh -c 'yarn build; yarn start'
    environment:
      - VIRTUAL_HOST=/,/*
      - VIRTUAL_HOST_WEIGHT=1
    expose:
      - '80'
    volumes:
      - ./ph-todo-frontend/src:/microserv/src
      - ./ph-todo-frontend/package.json:/microserv/package.json
    env_file:
      - ./common.env
      - ./secrets.env
    links:
      - rabbitmq

  ######
  # Backend API server
  ######
  api:
    build:
      context: './ph-todo-api'
      dockerfile: 'Dockerfile'
    command: sh -c 'yarn build ; yarn start'
    depends_on:
      - worker
      - db
    environment:
      - VIRTUAL_HOST=/api/*
      - VIRTUAL_HOST_WEIGHT=2
    expose:
      - '80'
    volumes:
      - ./ph-todo-api/src:/microserv/src
    env_file:
      - ./common.env
      - ./secrets.env
    links:
      - rabbitmq

  ######
  # Backend auth server
  ######
  auth:
    build:
      context: './ph-todo-auth'
      dockerfile: 'Dockerfile'
    command: sh -c 'yarn build ; yarn start'
    environment:
      - 'VIRTUAL_HOST=/auth/*'
    expose:
      - '80'
    volumes:
      - ./ph-todo-auth/src:/microserv/src
      - ./ph-todo-auth/package.json:/microserv/package.json
    env_file:
      - ./common.env
      - ./secrets.env
    links:
      - rabbitmq
      - redis

  ######
  # Backend DB worker
  ######
  db:
    build:
      context: './ph-todo-db'
      dockerfile: 'Dockerfile'
    command: sh -c 'yarn build ; yarn start'
    depends_on:
      - worker
    volumes:
      - ./ph-todo-db/src:/src
      - ./ph-todo-db/package.json:/microserv/package.json
    env_file:
      - ./common.env
      - ./secrets.env
    links:
      - rabbitmq
      - rethinkdb

  ######
  # Backend generic workers
  ######
  worker:
    build:
      context: './ph-todo-worker'
      dockerfile: 'Dockerfile'
    command: sh -c 'yarn build ; yarn start'
    expose:
      - '80'
    volumes:
      - ./ph-todo-worker/src:/microserv/src
      - ./ph-todo-worker/package.json:/microserv/package.json
    env_file:
      - ./common.env
      - ./secrets.env
    links:
      - rabbitmq
